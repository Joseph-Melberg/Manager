name: API CI-CD

on:
  push:
    branches: [ master ]
    paths: Api/InterApi/
  workflow_dispatch:
jobs:

  build-publish:
    runs-on: ubuntu-latest
    env:
      DOCKERFILE: ./Api/InterApi/Dockerfile
      PROJECT: ./Api/InterApi/InterApi.csproj
      APPSETTINGS: Api/InterApi/appsettings.json
      REPLACESETTINGS: Api/InterApi/Deployment/appsettings.deploy.json 
      TAG: interapi
    steps:
    - uses: actions/checkout@v2
    - 
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '#{'
        tokenSuffix: '}'
        files: '["${{env.REPLACESETTINGS}}"]'
      env:
        MYSQL_CONNECTION_STRING : ${{secrets.MYSQL_CONNECTION_STRING}}
        OFFSITE_REDIS : ${{secrets.OFFSITE_REDIS}}
    - 
      name: Replace Appsettings
      run: cp ${{env.REPLACESETTINGS}} ${{env.APPSETTINGS}}
    -
      name: Check work
      run: cat ${{env.APPSETTINGS}} 

    - uses: actions/checkout@v2
    - 
      name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - 
      name: Restore dependencies
      run: dotnet restore ${{env.PROJECT}}
    - 
      name: Build
      run: dotnet build --no-restore ${{env.PROJECT}}
    - 
      name: Publish
      run: dotnet publish ${{env.PROJECT}} -c Release -o ./app
    - 
      name: Docker Login
      uses: docker/login-action@v1.8.0
      with:
        registry: ${{secrets.DOCKER_HOST}}
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - 
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ${{secrets.DOCKERFILE}}
        push: true
        tags: |
          ${{secrets.DOCKER_HOST}}/${{env.TAG}}
  deploy:
    needs: build-publish
    runs-on: ubuntu-latest
    steps:
    - 
      name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        command:  docker pull ${{secrets.DOCKERHOST}}/${{env.TAG}}; docker stop ${{env.TAG}}; docker rm ${{env.TAG}}; docker run --name ${{env.TAG}} -e ASPNETCORE_URLS="http://+:80" -p 5001:80 --log-opt tag=api --restart=unless-stopped -d ${{secrets.DOCKERHOST}}/${{env.TAG}}; 
        host: ${{secrets.HOST}}
        username: ${{secrets.CENTURION_USERNAME}}
        password: ${{secrets.CENTURION_PASSWORD}}
  smoke:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    -
      name: Future Smoke Test
      run: echo ":)"
